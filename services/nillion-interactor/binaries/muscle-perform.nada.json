{"functions":[],"parties":[{"name":"Party1","source_ref_index":10}],"inputs":[{"type":"SecretInteger","party":"Party1","name":"genotype1","doc":"","source_ref_index":4},{"type":"SecretInteger","party":"Party1","name":"snp1","doc":"","source_ref_index":7}],"literals":[{"name":"0420609fa1d35394f41049df03ef341f","value":"0","type":"Integer"},{"name":"10d33944d37d5b1b833be6fd73d3033c","value":"1","type":"Integer"},{"name":"86e63315b115f2a1eb1d7fc854e4c36f","value":"9","type":"Integer"},{"name":"3bf3aca3a9762f07ea27308c85649001","value":"11","type":"Integer"},{"name":"be9dc3499e38754968f0ed1e2d88d815","value":"2","type":"Integer"}],"outputs":[{"name":"Result","operation_id":132215700061008,"party":"Party1","type":"Integer","source_ref_index":9}],"operations":{"132215700057024":{"LiteralReference":{"id":132215700057024,"refers_to":"0420609fa1d35394f41049df03ef341f","type":"Integer","source_ref_index":3}},"132215700056640":{"IfElse":{"id":132215700056640,"this":132215700055632,"arg_0":132215700056016,"arg_1":132215700056352,"type":"SecretInteger","source_ref_index":3}},"132215700058320":{"Not":{"id":132215700058320,"this":132215700061014,"type":"SecretBoolean","source_ref_index":1}},"132215700056352":{"LiteralReference":{"id":132215700056352,"refers_to":"0420609fa1d35394f41049df03ef341f","type":"Integer","source_ref_index":3}},"132215700061010":{"LessThan":{"id":132215700061010,"left":132215700047472,"right":132215700055104,"type":"SecretBoolean","source_ref_index":3}},"132215700060000":{"IfElse":{"id":132215700060000,"this":132215700058992,"arg_0":132215700059376,"arg_1":132215700059712,"type":"SecretInteger","source_ref_index":1}},"132215700051936":{"LiteralReference":{"id":132215700051936,"refers_to":"0420609fa1d35394f41049df03ef341f","type":"Integer","source_ref_index":6}},"132215700048240":{"LiteralReference":{"id":132215700048240,"refers_to":"10d33944d37d5b1b833be6fd73d3033c","type":"Integer","source_ref_index":6}},"132215700055200":{"LiteralReference":{"id":132215700055200,"refers_to":"3bf3aca3a9762f07ea27308c85649001","type":"Integer","source_ref_index":8}},"132215700047616":{"Not":{"id":132215700047616,"this":132215700061013,"type":"SecretBoolean","source_ref_index":6}},"132215700061014":{"LessThan":{"id":132215700061014,"left":132215700057648,"right":132215700058032,"type":"SecretBoolean","source_ref_index":1}},"132215700061013":{"LessThan":{"id":132215700061013,"left":132215700046800,"right":132215700055200,"type":"SecretBoolean","source_ref_index":6}},"132215700059376":{"LiteralReference":{"id":132215700059376,"refers_to":"10d33944d37d5b1b833be6fd73d3033c","type":"Integer","source_ref_index":1}},"132215700055632":{"Not":{"id":132215700055632,"this":132215700061012,"type":"SecretBoolean","source_ref_index":3}},"132215700047472":{"InputReference":{"id":132215700047472,"refers_to":"genotype1","type":"SecretInteger","source_ref_index":4}},"132215700051456":{"Not":{"id":132215700051456,"this":132215700061011,"type":"SecretBoolean","source_ref_index":6}},"132215700057312":{"IfElse":{"id":132215700057312,"this":132215700053328,"arg_0":132215700056640,"arg_1":132215700057024,"type":"SecretInteger","source_ref_index":3}},"132215700052944":{"IfElse":{"id":132215700052944,"this":132215700051456,"arg_0":132215700048240,"arg_1":132215700051936,"type":"SecretInteger","source_ref_index":6}},"132215700061009":{"LessThan":{"id":132215700061009,"left":132215700058704,"right":132215700057648,"type":"SecretBoolean","source_ref_index":1}},"132215700057648":{"Addition":{"id":132215700057648,"left":132215700053568,"right":132215700057312,"type":"SecretInteger","source_ref_index":2}},"132215700061012":{"LessThan":{"id":132215700061012,"left":132215700055104,"right":132215700047472,"type":"SecretBoolean","source_ref_index":3}},"132215700053328":{"Not":{"id":132215700053328,"this":132215700061010,"type":"SecretBoolean","source_ref_index":3}},"132215700061008":{"Reveal":{"id":132215700061008,"this":132215700060672,"type":"Integer","source_ref_index":0}},"132215700061011":{"LessThan":{"id":132215700061011,"left":132215700055200,"right":132215700046800,"type":"SecretBoolean","source_ref_index":6}},"132215700058704":{"LiteralReference":{"id":132215700058704,"refers_to":"be9dc3499e38754968f0ed1e2d88d815","type":"Integer","source_ref_index":1}},"132215700058032":{"LiteralReference":{"id":132215700058032,"refers_to":"be9dc3499e38754968f0ed1e2d88d815","type":"Integer","source_ref_index":1}},"132215700055104":{"LiteralReference":{"id":132215700055104,"refers_to":"86e63315b115f2a1eb1d7fc854e4c36f","type":"Integer","source_ref_index":5}},"132215700054096":{"LiteralReference":{"id":132215700054096,"refers_to":"0420609fa1d35394f41049df03ef341f","type":"Integer","source_ref_index":6}},"132215700058992":{"Not":{"id":132215700058992,"this":132215700061009,"type":"SecretBoolean","source_ref_index":1}},"132215700059712":{"LiteralReference":{"id":132215700059712,"refers_to":"0420609fa1d35394f41049df03ef341f","type":"Integer","source_ref_index":1}},"132215700053568":{"IfElse":{"id":132215700053568,"this":132215700047616,"arg_0":132215700052944,"arg_1":132215700054096,"type":"SecretInteger","source_ref_index":6}},"132215700060384":{"LiteralReference":{"id":132215700060384,"refers_to":"0420609fa1d35394f41049df03ef341f","type":"Integer","source_ref_index":1}},"132215700056016":{"LiteralReference":{"id":132215700056016,"refers_to":"10d33944d37d5b1b833be6fd73d3033c","type":"Integer","source_ref_index":3}},"132215700060672":{"IfElse":{"id":132215700060672,"this":132215700058320,"arg_0":132215700060000,"arg_1":132215700060384,"type":"SecretInteger","source_ref_index":1}},"132215700046800":{"InputReference":{"id":132215700046800,"refers_to":"snp1","type":"SecretInteger","source_ref_index":7}}},"source_files":{"muscle-perform.py":"from nada_dsl import *\n\n\n# Checks based on SNP rs1815739 whether someone is a sprinter or an endurance athelete\n# Genotype TT indicates endurance athlete\n# We arbitrarily assume sprinter otherwise\n# This program returns 0 if sprinter, 1 if endurance athelete\ndef nada_main():\n\n    party1 = Party(name=\"Party1\")\n\n\n    snp1 = SecretInteger(Input(name=\"snp1\", party=party1))\n    genotype1 = SecretInteger(Input(name=\"genotype1\", party=party1))\n\n    target_snp_1 = Integer(11)\n    target_genotype_1 = Integer(9)\n\n    eq1 = (snp1 >= target_snp_1).if_else((target_snp_1 >= snp1).if_else(Integer(1), Integer(0)), Integer(0))\n    eq2 = (genotype1 >= target_genotype_1).if_else((target_genotype_1 >= genotype1).if_else(Integer(1), Integer(0)), Integer(0))\n\n\n    total = eq1 + eq2\n\n    is_successful = (total >= Integer(2)).if_else((Integer(2) >= total).if_else(Integer(1), Integer(0)), Integer(0))\n\n    result = is_successful.reveal()\n\n    return [Output(result, \"Result\", party1)]\n"},"source_refs":[{"file":"muscle-perform.py","lineno":27,"offset":890,"length":35},{"file":"muscle-perform.py","lineno":25,"offset":772,"length":116},{"file":"muscle-perform.py","lineno":23,"offset":749,"length":21},{"file":"muscle-perform.py","lineno":20,"offset":618,"length":128},{"file":"muscle-perform.py","lineno":14,"offset":372,"length":68},{"file":"muscle-perform.py","lineno":17,"offset":473,"length":34},{"file":"muscle-perform.py","lineno":19,"offset":509,"length":108},{"file":"muscle-perform.py","lineno":13,"offset":313,"length":58},{"file":"muscle-perform.py","lineno":16,"offset":442,"length":30},{"file":"muscle-perform.py","lineno":29,"offset":0,"length":0},{"file":"muscle-perform.py","lineno":10,"offset":277,"length":33}]}